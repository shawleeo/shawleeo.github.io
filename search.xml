<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Excel 工作表密码保护的解除方法</title>
    <url>/2021/11/19/Excel%20%E5%B7%A5%E4%BD%9C%E8%A1%A8%E5%AF%86%E7%A0%81%E4%BF%9D%E6%8A%A4%E7%9A%84%E8%A7%A3%E9%99%A4%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<p>PS:长密码不太好用<br>PS:克服的是”校阅”选项的”保护工作表”</p>
<p>利用 VBA 巨集程式破解法</p>
<span id="more"></span>

<p><em><strong>只适用2016版Excel及之前版本</strong></em></p>
<p><strong>Excel 工作表密码保护的解除方法</strong></p>
<p>当开启一个 Excel工作表，进入后要看工作表上的公式如何运作，才发现工作表受到密码保护，上网搜寻了一下破解方法，试过很多种方法都太麻烦，最后终于找到最简单的破解方法，借此分享，希望用的到的人不必再一一去试。</p>
<p>Excel 工作表密码保护的解除方法</p>
<p>利用 VBA 巨集程式破解法：</p>
<p>1：打开该文件，切换到“检视”选项，点击“巨集”→“录制巨集”，出现“录制巨集”窗口，在“巨集名称”随意输入一名称(假设：ABC)，点击“确定”退出；</p>
<p>2：再点击“巨集”→“检视巨集”，选择“巨集名称”下的“ABC”并点击右边的“编辑”，会自动打开“Microsoft Visual Basic”编辑器，用以下的内容完全替换右侧窗口中的所有编码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Sub  ABC( )</span><br><span class="line"></span><br><span class="line">   Dim i As Integer, j As Integer, k As Integer</span><br><span class="line">   Dim l As Integer, m As Integer, n As Integer</span><br><span class="line">   Dim i1 As Integer, i2 As Integer, i3 As Integer</span><br><span class="line">   Dim i4 As Integer, i5 As Integer, i6 As Integer</span><br><span class="line"></span><br><span class="line">   On Error Resume Next</span><br><span class="line"></span><br><span class="line">   For i = 65 To 66: For j = 65 To 66: For k = 65 To 66</span><br><span class="line">      For l = 65 To 66: For m = 65 To 66: For i1 = 65 To 66</span><br><span class="line">         For i2 = 65 To 66: For i3 = 65 To 66: For i4 = 65 To 66</span><br><span class="line">            For i5 = 65 To 66: For i6 = 65 To 66: For n = 32 To 126</span><br><span class="line">               ActiveSheet.Unprotect Chr(i) &amp; Chr(j) &amp; Chr(k) &amp; _</span><br><span class="line">               Chr(l) &amp; Chr(m) &amp; Chr(i1) &amp; Chr(i2) &amp; Chr(i3) &amp; _</span><br><span class="line">               Chr(i4) &amp; Chr(i5) &amp; Chr(i6) &amp; Chr(n)</span><br><span class="line"></span><br><span class="line">               If ActiveSheet.ProtectContents = False Then</span><br><span class="line">                  MsgBox &quot;One usable password is &quot; &amp; Chr(i) &amp; Chr(j) &amp; _</span><br><span class="line">                  Chr(k) &amp; Chr(l) &amp; Chr(m) &amp; Chr(i1) &amp; Chr(i2) &amp; _</span><br><span class="line">                  Chr(i3) &amp; Chr(i4) &amp; Chr(i5) &amp; Chr(i6) &amp; Chr(n)</span><br><span class="line">                  ActiveWorkbook.Sheets(1).Select</span><br><span class="line">                  Range(&quot;a1&quot;).FormulaR1C1 = Chr(i) &amp; Chr(j) &amp; _</span><br><span class="line">                  Chr(k) &amp; Chr(l) &amp; Chr(m) &amp; Chr(i1) &amp; Chr(i2) &amp; _</span><br><span class="line">                  Chr(i3) &amp; Chr(i4) &amp; Chr(i5) &amp; Chr(i6) &amp; Chr(n)</span><br><span class="line">                  Exit Sub</span><br><span class="line">               End If</span><br><span class="line"></span><br><span class="line">   Next: Next: Next: Next: Next: Next</span><br><span class="line">   Next: Next: Next: Next: Next: Next</span><br><span class="line"></span><br><span class="line">End Sub</span><br></pre></td></tr></table></figure>

<p>3：再点击“巨集”→“检视巨集”，选择“巨集名称”下的“ABC”并点击“执行”，密码就现形了。</p>
<p>4：切换“校阅”选项，点击“保护工作表”，然后输入密码即可解除锁定。</p>
<hr>
<p>上述方法仅适用工作表被密码保护的档案，若是档案被密码锁住，则必须利用破解工具，搜寻网路会发现许多破解工具，其中试过 Password Recovery 还不错！</p>
<hr>
<p>解析:<br>这段VBA代码，主要使用【For Next循环】和【Chr函数】</p>
<p>循环组成各种可能出现的字符串组合，来破解出正确的密码。</p>
<p>其中，除了变量n，其他变量的结果较为固定，Chr(65)结果是A，Chr(66)结果是B。</p>
<p>大致的代码说明如下，仅供参考。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">Sub ABC()    </span><br><span class="line">Dim i As Integer, j As Integer, k As Integer    </span><br><span class="line">Dim l As Integer, m As Integer, n As Integer    </span><br><span class="line">Dim i1 As Integer, i2 As Integer, i3 As Integer    </span><br><span class="line">Dim i4 As Integer, i5 As Integer, i6 As Integer    </span><br><span class="line">&#x27;出错自动跳过    </span><br><span class="line">On Error Resume Next    &#x27;变量n之外,在AB之间循环;变量n在大小写字母及各种符号之间循环    </span><br><span class="line">For i = 65 To 66: For j = 65 To 66: For k = 65 To 66        </span><br><span class="line">For l = 65 To 66: For m = 65 To 66: For i1 = 65 To 66        </span><br><span class="line">For i2 = 65 To 66: For i3 = 65 To 66: For i4 = 65 To 66        </span><br><span class="line">For i5 = 65 To 66: For i6 = 65 To 66: For n = 32 To 126        </span><br><span class="line">&#x27;使用以下排列方式进行破解当前工作表        </span><br><span class="line">ActiveSheet.Unprotect Chr(i) &amp; Chr(j) &amp; Chr(k) &amp; Chr(l) &amp; Chr(m) &amp; Chr(i1) &amp; Chr(i2) &amp; Chr(i3) &amp; Chr(i4) &amp; Chr(i5) &amp; Chr(i6) &amp; Chr(n)        </span><br><span class="line">&#x27;如果当前工作表为未保护        </span><br><span class="line">If ActiveSheet.ProtectContents = False Then</span><br><span class="line">&#x27;信息框显示可用密码            </span><br><span class="line">MsgBox &quot;One usable password is &quot; &amp; Chr(i) &amp; Chr(j) &amp; Chr(k) &amp; Chr(l) &amp; Chr(m) &amp; Chr(i1) &amp; Chr(i2) &amp; Chr(i3) &amp; Chr(i4) &amp; Chr(i5) &amp; Chr(i6) &amp; Chr(n)           </span><br><span class="line">&#x27;选择当前工作簿的首个工作表            </span><br><span class="line">ActiveWorkbook.Sheets(1).Select           </span><br><span class="line">&#x27;首个工作表的A1单元格写入密码            </span><br><span class="line">Range(&quot;a1&quot;).FormulaR1C1 = Chr(i) &amp; Chr(j) &amp; Chr(k) &amp; Chr(l) &amp; Chr(m) &amp; Chr(i1) &amp; Chr(i2) &amp; Chr(i3) &amp; Chr(i4) &amp; Chr(i5) &amp; Chr(i6) &amp; Chr(n)            </span><br><span class="line">Exit Sub        </span><br><span class="line">End If        </span><br><span class="line">Next: Next: Next: Next: Next: Next    </span><br><span class="line">Next: Next: Next: Next: Next: Next</span><br><span class="line">End Sub</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Computer</category>
        <category>Software</category>
        <category>Excel</category>
      </categories>
      <tags>
        <tag>计算机技能</tag>
        <tag>Excel</tag>
      </tags>
  </entry>
  <entry>
    <title>MAC下Hexo+Github博客搭建教学</title>
    <url>/2021/10/09/MAC%E4%B8%8BHexo-Github%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%95%99%E5%AD%A6/</url>
    <content><![CDATA[<p>参考1:<a href="https://segmentfault.com/a/1190000038373795">https://segmentfault.com/a/1190000038373795</a></p>
<p>参考2:<a href="https://godweiyang.com/2018/04/13/hexo-blog/">https://godweiyang.com/2018/04/13/hexo-blog/</a></p>
<p>开始之前需要在电脑上安装好Git和node.js，Mac上可以使用Homebrew命令行工具来安装Git和node.js</p>
<span id="more"></span>

<h1 id="安装Homebrew"><a href="#安装Homebrew" class="headerlink" title="安装Homebrew"></a>安装Homebrew</h1><p>在命令行工具输入以下命令，如果已经安装过Homebrew可以忽略</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</span><br></pre></td></tr></table></figure>

<h1 id="Homebrew-安装-node-js"><a href="#Homebrew-安装-node-js" class="headerlink" title="Homebrew 安装 node.js"></a>Homebrew 安装 node.js</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">brew install node</span><br></pre></td></tr></table></figure>


<p>安装后可以使用命令来检查是否安装成功</p>
<p>检查node</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">node -v</span><br></pre></td></tr></table></figure>

<p>输出结果：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">v12.14.1</span><br></pre></td></tr></table></figure>


<p>检查npm是否安装成功，npm是node.js的包管理工具，用它来安装hexo</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm -v</span><br></pre></td></tr></table></figure>

<p>输出结果:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">6.13.4</span><br></pre></td></tr></table></figure>

<h1 id="Homebrew-安装git"><a href="#Homebrew-安装git" class="headerlink" title="Homebrew 安装git"></a>Homebrew 安装git</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">brew install git</span><br></pre></td></tr></table></figure>

<p>检查git是否安装成功</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git -v</span><br></pre></td></tr></table></figure>

<p>输出结果:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git version 2.24.3 (Apple Git-128)</span><br></pre></td></tr></table></figure>

<h1 id="使用-npm-安装-hexo"><a href="#使用-npm-安装-hexo" class="headerlink" title="使用 npm 安装 hexo"></a>使用 npm 安装 hexo</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo npm install -g hexo-cli</span><br></pre></td></tr></table></figure>

<p>安装完成后，在Desktop创建一个blog文件夹，在该文件夹下初始化我们的博客</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd ~/Desktop &amp;&amp; mkdir blog &amp;&amp; cd blog</span><br></pre></td></tr></table></figure>


<p>在该文件件目录下执行博客初始化操作</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 会下载一些node.js的依赖文件</span><br><span class="line">hexo init</span><br></pre></td></tr></table></figure>

<p>初始化成功后，在blog目录下执行预览操作</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure>

<p>当看到如下输出就可以预览我们创建的博客了</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">INFO  Validating config</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Hexo is running at http://localhost:4000 . Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure>

<p>预览效果如下</p>
<p><img src="https://shawleeoblog-1257713203.cos.ap-nanjing.myqcloud.com/1.jpeg" alt="image"></p>
<h1 id="配置客户端git-添加SSH-Key到github"><a href="#配置客户端git-添加SSH-Key到github" class="headerlink" title="配置客户端git 添加SSH Key到github"></a>配置客户端git 添加SSH Key到github</h1><p>如果已经配置过，该步骤可以忽略<br>在命令行输入配置用户名和账号的命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;username&quot;</span><br><span class="line">git config --global user.email &quot;email@gmail.com&quot;</span><br></pre></td></tr></table></figure>

<p>其中 username 是你的用户名，<a href="mailto:&#101;&#x6d;&#x61;&#105;&#108;&#x40;&#103;&#x6d;&#x61;&#105;&#108;&#x2e;&#99;&#x6f;&#109;">&#101;&#x6d;&#x61;&#105;&#108;&#x40;&#103;&#x6d;&#x61;&#105;&#108;&#x2e;&#99;&#x6f;&#109;</a>是你github的登录邮箱<br>然后通过终端命令生成SSH Key</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;email@gmail.com&quot;</span><br></pre></td></tr></table></figure>

<p>如果已经创建过会出现 Overwrite (y/n)? n提示可以输入 n，如果没有创建过会要求我们输入密码，然后一路回车下去就行，执行完成后会在~/.ssh/id_rsa.pub目录下生成 需要使用的 key。</p>
<p>可以使用命令行输出key并复制</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure>

<p>或者可以找到这个文件并打开它，复制里面的内容。</p>
<p>登录github账号-》找到 setting-》选择所创建的项目-》Deploy keys-》将公钥信息粘贴上去</p>
<h1 id="注册github账号"><a href="#注册github账号" class="headerlink" title="注册github账号"></a>注册github账号</h1><p>打开<a href="https://github.com/%EF%BC%8C%E6%96%B0%E5%BB%BA%E4%B8%80%E4%B8%AA%E9%A1%B9%E7%9B%AE%EF%BC%8C%E5%A6%82%E4%B8%8B%E6%89%80%E7%A4%BA%EF%BC%9A">https://github.com/，新建一个项目，如下所示：</a><br><img src="https://shawleeoblog-1257713203.cos.ap-nanjing.myqcloud.com/2.png" alt="image"></p>
<p>然后如下图所示，输入自己的项目名字，后面一定要加.github.io后缀，README初始化也要勾上。名称一定要和你的github名字完全一样，比如你github名字叫abc，那么仓库名字一定要是abc.github.io。</p>
<p><img src="https://shawleeoblog-1257713203.cos.ap-nanjing.myqcloud.com/3.png" alt="image"></p>
<p>这里要特别注意，后面有用<br><img src="https://shawleeoblog-1257713203.cos.ap-nanjing.myqcloud.com/4.png" alt="image"></p>
<p>然后项目就建成了，点击Settings，向下拉到最后有个GitHub Pages，点击Choose a theme选择一个主题。然后等一会儿，再回到GitHub Pages，会变成下面这样：</p>
<p>++【请一定要注意这里的source,这里的source才会在page中显示出来】<br>++<br><img src="https://shawleeoblog-1257713203.cos.ap-nanjing.myqcloud.com/5.png" alt="image"></p>
<h1 id="本地博客关联到Github主页"><a href="#本地博客关联到Github主页" class="headerlink" title="本地博客关联到Github主页"></a>本地博客关联到Github主页</h1><p>然后命令行切换到本地blog目录下 </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd ~/Desktop/blog</span><br></pre></td></tr></table></figure>

<p>执行命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>
<p>然后开始修改配置文件 ~/Desktop/blog/_config.yml<br>修改 deploy部分为：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@github.com:username/username.github.io.git</span><br><span class="line">  branch: gh-pages</span><br></pre></td></tr></table></figure>
<p>branch看上图的source是什么就写什么</p>
<p>然后就可以把博客push到github了<br>在命令行执行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#生成我们想要的博客文件</span><br><span class="line">hexo g</span><br><span class="line">#将本地的博客文件push到github</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>
<p>hexo d 执行成功后，就可以查看我们的Blog了</p>
<h1 id="开始写博客"><a href="#开始写博客" class="headerlink" title="开始写博客"></a>开始写博客</h1><p>在命令行执行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new firstPage.md</span><br></pre></td></tr></table></figure>
<p>会在 ~/Desktop/blog/source/_post目录下生成 firstPage.md 打开这个文件就可以开心的写博客了<br>写完后重新执行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>
<p>就可以同步博客到github</p>
<p>附 hexo常用命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo n &quot;博客名称&quot;  =&gt; hexo new &quot;博客名称&quot;   #这两个都是创建新文章，前者是简写模式</span><br><span class="line">hexo p  =&gt; hexo publish</span><br><span class="line">hexo g  =&gt; hexo generate  #生成</span><br><span class="line">hexo s  =&gt; hexo server  #启动服务预览</span><br><span class="line">hexo d  =&gt; hexo deploy  #部署  </span><br><span class="line"></span><br><span class="line">hexo server   #Hexo 会监视文件变动并自动更新，无须重启服务器。</span><br><span class="line">hexo server -s   #静态模式</span><br><span class="line">hexo server -p 5000   #更改端口</span><br><span class="line">hexo server -i 192.168.1.1   #自定义IP</span><br><span class="line">hexo clean   #清除缓存，网页正常情况下可以忽略此条命令</span><br><span class="line">hexo g   #生成静态网页</span><br><span class="line">hexo d   #开始部署</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Computer</category>
        <category>Building Website</category>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>计算机技能</tag>
        <tag>博客搭建</tag>
      </tags>
  </entry>
  <entry>
    <title>GoogleAd申请加添加到blog</title>
    <url>/2022/01/25/GoogleAd%E7%94%B3%E8%AF%B7%E5%8A%A0%E6%B7%BB%E5%8A%A0%E5%88%B0blog/</url>
    <content><![CDATA[<h1 id="注册-Google-AdSense"><a href="#注册-Google-AdSense" class="headerlink" title="注册 Google AdSense"></a>注册 Google AdSense</h1><p>只说一句，注册地区不能改，要能接收纸质挂号信</p>
<span id="more"></span>
<h1 id="添加-AdSense-代码"><a href="#添加-AdSense-代码" class="headerlink" title="添加 AdSense 代码"></a>添加 AdSense 代码</h1><p>在注册完成后，AdSense 会给你一串代码，并要求你把这串代码放在 </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;head&gt;&lt;/head&gt;</span><br></pre></td></tr></table></figure>
<p>同时再次提醒确认你的 NexT 主题的版本是不是 v6.0.2 或后续版本。如果不是的话，你要么考虑升级，要么可以点❌关闭了。</p>
<p>先找到 themes/next/_config.yml 将 head 这一行注释取消掉，让它生效。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Create your custom files in site directory `source/_data` and uncomment needed files below.</span><br><span class="line">custom_file_path:</span><br><span class="line">  head: source/_data/head.njk</span><br><span class="line">  #header: source/_data/header.njk</span><br><span class="line">  #sidebar: source/_data/sidebar.njk</span><br><span class="line">  #postMeta: source/_data/post-meta.njk</span><br><span class="line">  #postBodyEnd: source/_data/post-body-end.njk</span><br><span class="line">  #footer: source/_data/footer.njk</span><br><span class="line">  #bodyEnd: source/_data/body-end.njk</span><br><span class="line">  #variable: source/_data/variables.styl</span><br><span class="line">  #mixin: source/_data/mixins.styl</span><br><span class="line">  #style: source/_data/styles.styl</span><br></pre></td></tr></table></figure>


<p>然后在项目的根目录下面的 source 下面创建文件夹和文件：source/_data/head.njk，注意，这里的 source 指的是项目根目录下面的 source ，不是 themes/next/source。</p>
<p>并把 AdSense 给我们的那串代码放在 head.njk 里面，只放这一句即可：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script data-ad-client=&quot;██████████&quot; async src=&quot;https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>然后可以重新启动一下本地的 Hexo 环境，检查 <head></head> 标记中有没有出现刚才添加的代码。检查没有问题之后，就可以部署到生产环境使上面的修改生效了。为了保险起见，在生产环境上也要检查一下 <head></head> 标记中有没有出现刚才添加的代码。确认没有问题之后，就可以回到 AdSense 页面中点击验证按钮了。</p>
<p>注意，如果 AdSense 告诉你检查不通过，你一定不要频繁点击再次检查，一定要先确定检查不通过的原因，并在排除问题之后再重新检查，因为每天检查次数是有限制的，如果超过限制，就只能等 24 小时之后再检查了</p>
<p>然后 AdSense 会开始审核阶段，这期间我们静静等待审核结果的邮件就好了。</p>
]]></content>
      <categories>
        <category>Computer</category>
        <category>Building Website</category>
        <category>Advertisement</category>
      </categories>
      <tags>
        <tag>Google AdSense</tag>
      </tags>
  </entry>
  <entry>
    <title>Mac下移动硬盘的分区以及TimeMachine的备份，公用盘首选NTFS，不建议Exfat</title>
    <url>/2021/11/20/Mac%E4%B8%8B%E7%A7%BB%E5%8A%A8%E7%A1%AC%E7%9B%98%E7%9A%84%E5%88%86%E5%8C%BA%E4%BB%A5%E5%8F%8ATimeMachine%E7%9A%84%E5%A4%87%E4%BB%BD%EF%BC%8C%E5%85%AC%E7%94%A8%E7%9B%98%E9%A6%96%E9%80%89NTFS%EF%BC%8C%E4%B8%8D%E5%BB%BA%E8%AE%AEExfat/</url>
    <content><![CDATA[<p>参考：<a href="%E6%9D%A5%E6%BA%90%EF%BC%9Ahttps://www.jianshu.com/p/5f8b4d9a8">https://www.jianshu.com/p/5f8b4d9a8</a></p>
<p>TimeMachine是个好东西，也许你有好多重要的东西需要备份，或许公司给你配备了一台高大上的Mac Pro,需要资料转移，也许电脑意外丢失，需要数据恢复，TimeMachine的备份总能给我们意想不到的帮助。</p>
<span id="more"></span>

<h1 id="磁盘抹除及资料转移"><a href="#磁盘抹除及资料转移" class="headerlink" title="磁盘抹除及资料转移"></a>磁盘抹除及资料转移</h1><p>刚买的移动硬盘大部分都是NTFS格式的，比如我的希捷1TB移动硬盘，首先NTFS格式在Mac上是可读不可写的。希捷提供官方工具Paragon驱动程序兼容，但是在抹除之前要关掉该工具，否则会提示抹除失败。另外不要用exFAT格式，不稳定。</p>
<p>首先问题是这样子的，1TB的移动硬盘现在为NTFS格式，而我需要TimeMachine来对我的电脑进行备份，Time Machine 备份磁盘最常见的格式是“Mac OS 扩展”格式，但Time Machine还支持“Mac OS 扩展（区分大小写，日志式）”和XSan格式。所以首先我们要做的是：</p>
<p>1.将移动硬盘里面所存储的内容转移到其他硬盘中，比如Windows的D盘F盘，也可以转移到其他的移动硬盘中，具体迁移到哪里，根据你数据的大小选择最恰当的存储地方。</p>
<p>2.将移动硬盘抹掉，变成Mac OS X 格式。首先打开commmand+空格打开你的Spotlight，搜索disk Utility.app,也就是苹果的磁盘工具，我这里以xiaomi这个磁盘作为演示。点击抹掉，这样你的硬盘则被格式化为MAC OS X 格式了。</p>
<p><img src="https://shawleeoblog-1257713203.cos.ap-nanjing.myqcloud.com/5-1.jpeg" alt="image"></p>
<h1 id="分区建议及操作"><a href="#分区建议及操作" class="headerlink" title="分区建议及操作"></a>分区建议及操作</h1><p>再来说说分区的建议，1TB的移动硬盘我建议分成两个区，300GB的MAC OS X格式作为经常使用Mac的你作为TimeMacine备份使用，700GB的另一个分区NTFS格式的作为你穿插在windows和Mac之间存储一些照片或者影音文件之类的，大部分情况下很够用，根据你硬盘的大小选择最适当的分区数以及大小。</p>
<p><strong>Notes</strong>：exfat32适用于U盘闪存 单个文件限制不能突破4GB 而且数据恢复也较为困难 如果你存储的是影音或者游戏安装包 NTFS也是不错的选择</p>
<p><strong>分区操作</strong></p>
<p>左侧点击你的移动硬盘，上面有急救，分区抹掉等等选项，点击分区，划分大小，因为在MAC系统下不能直接格式化为NTFS格式的，我们将300GB的格式化为MAC OS X 格式，然后将700GB的分区格式化为ExFat格式，如果你想要知道不同的格式之间有什么不同，谷歌一下，会得到你想要的一切。</p>
<p><img src="https://shawleeoblog-1257713203.cos.ap-nanjing.myqcloud.com/5-2.jpeg" alt="image"></p>
<p>上述操作做完之后，效果会是每次当你的移动硬盘连接到你的电脑时，会为两部分，300GB以及700GB，且为MAC OS X格式，以及ExFat格式，现在我们只需要将移动硬盘连接到一台Windows电脑上，将ExFat这个硬盘格式化为NTFS格式就好了。现在你要做的只不过花费一些时间把刚刚拷贝过去的你的资料转移回来就可以了。<br>现在我们就拥有了两个分区的移动硬盘，可以应付不同的操作系统，进行所需要的操作。</p>
<p>其实目前mac也可以直接转换NTFS格式</p>
<h1 id="TimeMachine备份"><a href="#TimeMachine备份" class="headerlink" title="TimeMachine备份"></a>TimeMachine备份</h1><p>很简单，打开系统偏好设置，点击TimeMachine，选择那个你刚刚分区成功容量为300GB格式为MAC OS X的硬盘，经过蛮久的等待，就备份成功喽，很容易操作以及理解，Apple的支持文档也做了详细的步骤解释 <a href="https://support.apple.com/zh-cn/HT201250">Apple支持</a></p>
<p><img src="https://shawleeoblog-1257713203.cos.ap-nanjing.myqcloud.com/5-3.jpeg" alt="image"></p>
<h1 id="移动硬盘保养及使用实测"><a href="#移动硬盘保养及使用实测" class="headerlink" title="移动硬盘保养及使用实测"></a>移动硬盘保养及使用实测</h1><p>1、防止硬盘非正常情况下拔出 以及剧烈碰撞</p>
<p>2、买一些知名的 硬盘比如希捷 西部数据的</p>
<p>3、在读写中避免震动</p>
<p>到这里，TimeMachine的备份以及我们移动硬盘的分区就全部搞定了，yeah~</p>
<h1 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h1><p>要手动启动备份，请从菜单栏的“时间机器”</p>
<p><img src="https://shawleeoblog-1257713203.cos.ap-nanjing.myqcloud.com/5-4.png" alt="image"></p>
<p>菜单中选取“立即备份”。使用这个菜单，还可以查看某一备份的状态或跳过正在进行的某一备份。</p>
<p><img src="https://shawleeoblog-1257713203.cos.ap-nanjing.myqcloud.com/5-5.jpeg" alt="image"></p>
]]></content>
      <categories>
        <category>Computer</category>
        <category>Hardware</category>
        <category>Storage</category>
      </categories>
      <tags>
        <tag>计算机技能</tag>
        <tag>TimeMachine</tag>
        <tag>MacOS</tag>
        <tag>移动硬盘</tag>
      </tags>
  </entry>
  <entry>
    <title>Oracle Cloud 折腾记录</title>
    <url>/2021/11/06/Oracle%20Cloud%20%E6%8A%98%E8%85%BE%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<p>PS：想问一下oracle cloud shell咋用？？会用的请评论</p>
<p>PS：oracle cloud的官方文档写的不咋地，有些错误，请小心</p>
<p>PS：下述脚本已经github备份，如果wget链接失效可以评论</p>
<span id="more"></span>

<p>—正文开始—</p>
<p>注册Oracle Cloud就不赘述了，最好手机开4G注册。</p>
<h1 id="第一步，开一台云服务器实例，平台映像我选的是CentOS7。"><a href="#第一步，开一台云服务器实例，平台映像我选的是CentOS7。" class="headerlink" title="第一步，开一台云服务器实例，平台映像我选的是CentOS7。"></a><strong>第一步，开一台云服务器实例，平台映像我选的是CentOS7。</strong></h1><h1 id="第二步，本机生成ssh公钥私钥（见之前文章），并上传公钥。引导卷大小不用变，但是合计超100G会收费，所以删服务器时一定要记得删去引导卷，数据传输是否选择加密看个人需求。"><a href="#第二步，本机生成ssh公钥私钥（见之前文章），并上传公钥。引导卷大小不用变，但是合计超100G会收费，所以删服务器时一定要记得删去引导卷，数据传输是否选择加密看个人需求。" class="headerlink" title="第二步，本机生成ssh公钥私钥（见之前文章），并上传公钥。引导卷大小不用变，但是合计超100G会收费，所以删服务器时一定要记得删去引导卷，数据传输是否选择加密看个人需求。"></a><strong>第二步，本机生成ssh公钥私钥（见之前文章），并上传公钥。引导卷大小不用变，但是合计超100G会收费，所以删服务器时一定要记得删去引导卷，数据传输是否选择加密看个人需求。</strong></h1><h1 id="第三步，利用脚本开启root登陆。"><a href="#第三步，利用脚本开启root登陆。" class="headerlink" title="第三步，利用脚本开启root登陆。"></a><strong>第三步，利用脚本开启root登陆。</strong></h1><p>Oracle 实例和G家一样，默认没有开启 ssh 密码登录功能，而且也没有提供网页 ssh，仅提供 ssh 密钥的方式建立连接，对于mac不太友好，在探索后发现可以在创建实例的时候利用 cloud-init 脚本就可以了。(此方法也适合 gcp，功能和原理都是一样的)</p>
<p><img src="https://shawleeoblog-1257713203.cos.ap-nanjing.myqcloud.com/6.jpeg" alt="image"></p>
<p>通用型：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">echo root:123456789 |sudo chpasswd root</span><br><span class="line">sudo sed -i &#x27;s/^#\?PermitRootLogin.*/PermitRootLogin yes/g&#x27; /etc/ssh/sshd_config;</span><br><span class="line">sudo sed -i &#x27;s/^#\?PasswordAuthentication.*/PasswordAuthentication yes/g&#x27; /etc/ssh/sshd_config;</span><br><span class="line">sudo service sshd restart</span><br></pre></td></tr></table></figure>
<p>debian：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">echo root:123456789 |sudo chpasswd root</span><br><span class="line">sudo sed -i &#x27;s/#PermitRootLogin prohibit-password/PermitRootLogin yes/g&#x27; /etc/ssh/sshd_config;</span><br><span class="line">sudo sed -i &#x27;s/PasswordAuthentication no/PasswordAuthentication yes/g&#x27; /etc/ssh/sshd_config;</span><br><span class="line">sudo service sshd restart</span><br></pre></td></tr></table></figure>

<p>centos：亲测CentOS7</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">echo root:123456789 |sudo chpasswd root</span><br><span class="line">sudo sed -i &#x27;s/PermitRootLogin no/PermitRootLogin yes/g&#x27; /etc/ssh/sshd_config;</span><br><span class="line">sudo sed -i &#x27;s/PasswordAuthentication no/PasswordAuthentication yes/g&#x27; /etc/ssh/sshd_config;</span><br><span class="line">sudo service sshd restart</span><br></pre></td></tr></table></figure>

<p>ubuntu：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">echo root:123456789 |sudo chpasswd root</span><br><span class="line">sudo sed -i &#x27;s/PermitRootLogin prohibit-password/PermitRootLogin yes/g&#x27; /etc/ssh/sshd_config;</span><br><span class="line">sudo sed -i &#x27;s/PasswordAuthentication no/PasswordAuthentication yes/g&#x27; /etc/ssh/sshd_config;</span><br><span class="line">sudo service sshd restart</span><br></pre></td></tr></table></figure>
<p>工作原理：</p>
<p>工作原理就是在新实例开机的时候自动执行该脚本修改sshd_config这个配置文件，从而达到我们的目的，其中123456789是我们需要修改的 root 密码，PermitRootLogin和PasswordAuthentication是ssh 密码登录的关键，并且必须是yes值才能正常 ssh 密码登录。</p>
<h1 id="第四步：如对甲骨文心存疑虑，可去掉勾选cloud-agent的打勾选项，这里选着后面也可以卸掉。"><a href="#第四步：如对甲骨文心存疑虑，可去掉勾选cloud-agent的打勾选项，这里选着后面也可以卸掉。" class="headerlink" title="第四步：如对甲骨文心存疑虑，可去掉勾选cloud-agent的打勾选项，这里选着后面也可以卸掉。"></a><strong>第四步：如对甲骨文心存疑虑，可去掉勾选cloud-agent的打勾选项，这里选着后面也可以卸掉。</strong></h1><p><img src="https://shawleeoblog-1257713203.cos.ap-nanjing.myqcloud.com/7.jpeg" alt="image"></p>
<h1 id="第五步：root登陆"><a href="#第五步：root登陆" class="headerlink" title="第五步：root登陆"></a><strong>第五步：root登陆</strong></h1><p>ping一下IP地址，如果ping不通，大概率是防火墙规则问题，如下修改开启全部ICMP流量，ping通后，<strong>此条规则可删去</strong></p>
<p><img src="https://shawleeoblog-1257713203.cos.ap-nanjing.myqcloud.com/8.png" alt="image"></p>
<p>如果上述操作后仍不能ping通，按下述路径去换ip地址</p>
<p><img src="https://shawleeoblog-1257713203.cos.ap-nanjing.myqcloud.com/9.png" alt="image"></p>
<p>开始连接，在终端</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1、ssh root@ip地址</span><br><span class="line">2、输入密码</span><br></pre></td></tr></table></figure>
<p>或者采用FinalShell<br><img src="https://shawleeoblog-1257713203.cos.ap-nanjing.myqcloud.com/10.jpeg" alt="image"></p>
<h1 id="第六步：卸载相关程序"><a href="#第六步：卸载相关程序" class="headerlink" title="第六步：卸载相关程序"></a><strong>第六步：卸载相关程序</strong></h1><h2 id="pcbind"><a href="#pcbind" class="headerlink" title="pcbind"></a>pcbind</h2><p>使用netstat -ntlp命令发现rpcbind监听了111端口,如担心安全可执行以下命令卸载禁用:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl stop rpcbind</span><br><span class="line">systemctl stop rpcbind.socket</span><br><span class="line">systemctl disable rpcbind</span><br><span class="line">systemctl disable rpcbind.socket</span><br></pre></td></tr></table></figure>
<h2 id="oracle-cloud-agent"><a href="#oracle-cloud-agent" class="headerlink" title="oracle-cloud-agent"></a>oracle-cloud-agent</h2><p>卸载甲骨文云官方后台监控程序</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl stop oracle-cloud-agent</span><br><span class="line">systemctl disable oracle-cloud-agent</span><br><span class="line">systemctl stop oracle-cloud-agent-updater</span><br><span class="line">systemctl disable oracle-cloud-agent-updater</span><br></pre></td></tr></table></figure>
<h1 id="第七步：Oracle-Cloud-VPS-CentOS-7-升级内核并开启官方原版Bottleneck-Bandwidth-and-RTT"><a href="#第七步：Oracle-Cloud-VPS-CentOS-7-升级内核并开启官方原版Bottleneck-Bandwidth-and-RTT" class="headerlink" title="第七步：Oracle Cloud VPS CentOS 7 升级内核并开启官方原版Bottleneck Bandwidth and RTT"></a>第七步：Oracle Cloud VPS CentOS 7 升级内核并开启官方原版Bottleneck Bandwidth and RTT</h1><p>转自<a href="https://note.youdao.com/">https://www.ioiox.com/archives/63.html</a></p>
<p>更新 yum，时间较长</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum -y update</span><br></pre></td></tr></table></figure>
<p>查看内核</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uname -r</span><br><span class="line"># 内核版本 3.10.0-1062.12.1.el7.x86_64</span><br></pre></td></tr></table></figure>
<p>手动下载秋水 Bottleneck Bandwidth and RTTPlus版内核</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget https://raw.githubusercontent.com/chiakge/Linux-NetSpeed/master/bbrplus/centos/7/kernel-4.14.129-bbrplus.rpm</span><br></pre></td></tr></table></figure>

<p>手动安装内核</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum -y install kernel-4.14.129-bbrplus.rpm</span><br></pre></td></tr></table></figure>
<p>更新引导</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">grub2-mkconfig -o /boot/grub2/grub.cfg</span><br><span class="line">grub2-mkconfig -o /boot/efi/EFI/centos/grub.cfg</span><br></pre></td></tr></table></figure>

<p>列出系统开机启动项</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo awk -F\&#x27; &#x27;$1==&quot;menuentry &quot; &#123;print i++ &quot; : &quot; $2&#125;&#x27; /boot/efi/EFI/centos/grub.cfg</span><br></pre></td></tr></table></figure>
<p>设置新版内核默认启动项</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">grub2-set-default 0</span><br></pre></td></tr></table></figure>
<p>重启</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure>
<p><strong>上述步骤已经完成安装，下面开启 Bottleneck Bandwidth and RTT Plus 及优化</strong></p>
<p>运行下述一键脚本,选择7开启加速.</p>
<p>再次运行下述一键脚本,选择10优化并重启完成.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget -N --no-check-certificate &quot;https://raw.githubusercontent.com/chiakge/Linux-NetSpeed/master/tcp.sh&quot; &amp;&amp; chmod +x tcp.sh &amp;&amp; ./tcp.sh</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>检测 Bottleneck Bandwidth and RTT Plus 是否开启成功，输入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sysctl net.ipv4.tcp_available_congestion_control</span><br></pre></td></tr></table></figure>
<p>如果返回值为：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">net.ipv4.tcp_available_congestion_control = bbrplus cubic reno</span><br></pre></td></tr></table></figure>

<p>则开启成功</p>
<h1 id="第八步：建站等等操作，按照个人需求进行（你懂的）"><a href="#第八步：建站等等操作，按照个人需求进行（你懂的）" class="headerlink" title="第八步：建站等等操作，按照个人需求进行（你懂的）"></a>第八步：建站等等操作，按照个人需求进行（你懂的）</h1><h1 id="第九步：防火墙规则"><a href="#第九步：防火墙规则" class="headerlink" title="第九步：防火墙规则"></a>第九步：防火墙规则</h1><p>个人不推荐所有协议和所有端口全部打开，如果没有建站需求的话，http的80和https的443也无需打开。</p>
<p>由于目前本人需求只需要打开一个端口，所以我只开一个端口和ssh的22端口，其他2个官方自带规则没有动，对于我的需求来说，已经够用了。</p>
<p><img src="https://shawleeoblog-1257713203.cos.ap-nanjing.myqcloud.com/12.jpeg" alt="image"></p>
]]></content>
      <categories>
        <category>Computer</category>
        <category>Building Website</category>
        <category>Server</category>
      </categories>
      <tags>
        <tag>计算机技能</tag>
        <tag>云服务器</tag>
        <tag>BREAK</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo 下Next主题新增打赏支持</title>
    <url>/2022/01/27/hexo%20%E4%B8%8BNext%E4%B8%BB%E9%A2%98%E6%96%B0%E5%A2%9E%E6%89%93%E8%B5%8F%E6%94%AF%E6%8C%81/</url>
    <content><![CDATA[<p>PS：制作透明二维码图片可以用草料</p>
<p>编辑文件themes/next/_config.yml， 找到Reward部分的内容进行修改，参考如下：</p>
<span id="more"></span>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Reward (Donate)</span><br><span class="line"># Front-matter variable (unsupport animation).</span><br><span class="line">reward_settings:</span><br><span class="line">  # If true, reward will be displayed in every article by default.</span><br><span class="line">  enable: true</span><br><span class="line">  animation: false</span><br><span class="line">  comment: 坚持原创分享，您的支持将鼓励我继续创作更多优质内容！</span><br><span class="line"></span><br><span class="line">reward:</span><br><span class="line">  wechatpay: /images/wechatpay.jpg</span><br><span class="line">  #alipay: /images/alipay.png</span><br><span class="line">  #paypal: /images/paypal.png</span><br><span class="line">  #bitcoin: /images/bitcoin.png</span><br></pre></td></tr></table></figure>
<p>  其中wechatpay就是微信支付了。 把第二步获取的图片放到themes/next/source/images目录下，并改名为wechatpay.jpg</p>
]]></content>
      <categories>
        <category>Computer</category>
        <category>Building Website</category>
        <category>Advertisement</category>
      </categories>
      <tags>
        <tag>二维码赞赏</tag>
      </tags>
  </entry>
  <entry>
    <title>centos7的默认防火墙firewall与ipstable</title>
    <url>/2022/01/15/centos7%E7%9A%84%E9%BB%98%E8%AE%A4%E9%98%B2%E7%81%AB%E5%A2%99firewall%E4%B8%8Eipstable/</url>
    <content><![CDATA[<p><strong>1、默认防火墙firewall</strong></p>
<p>CentOS 7查看所有已开放端口命令：</p>
<span id="more"></span>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">firewall-cmd --zone=public --list-ports</span><br></pre></td></tr></table></figure>


<p>查看所有开启的端口号。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">netstat -aptn</span><br></pre></td></tr></table></figure>

<p>查看系统中所有使用 udp协议 的端口号。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">netstat -nupl</span><br></pre></td></tr></table></figure>

<p>查看系统中使用 tcp协议 的端口号信息。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">netstat -ntpl</span><br></pre></td></tr></table></figure>

<hr>
<p>开放centos7防火墙的端口：<br>-添加开放端口号</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=5672/tcp --permanent   # 开放5672端口</span><br><span class="line"></span><br><span class="line">firewall-cmd --zone=public --remove-port=5672/tcp --permanent  #关闭5672端口</span><br><span class="line"></span><br><span class="line">firewall-cmd --reload   # 配置立即生效</span><br></pre></td></tr></table></figure>

<p>-重启firewall</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">firewall-cmd —reload</span><br></pre></td></tr></table></figure>

<p>-检查是否生效</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">firewall-cmd —zone=public —query-port=8080/tcp</span><br></pre></td></tr></table></figure>

<p>-停止firewall</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl stop firewalld.service</span><br></pre></td></tr></table></figure>

<p>-禁止firewall开机启动</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl disable firewalld.service</span><br></pre></td></tr></table></figure>


<p>命令含义：</p>
<p>–zone #作用域</p>
<p>–add-port=80/tcp #添加端口，格式为：端口/通讯协议</p>
<p>–permanent #永久生效，没有此参数重启后失效( —permanent放在前面与后面都行)</p>
<hr>
<p><strong>2、防火墙ipstable</strong></p>
<p>（1）Linux防火墙(Iptables)重启系统生效</p>
<p>开启：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@S1 core]# chkconfig iptables on</span><br></pre></td></tr></table></figure>
<p>关闭：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@S1 core]# chkconfig iptables off</span><br></pre></td></tr></table></figure>
<p>（2）Linux防火墙(Iptables) 即时生效，重启后失效<br>开启：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@S1 core]# service iptables start  </span><br><span class="line"># CentOS7</span><br><span class="line">[root@S1 core]# systemctl start  iptables.service</span><br></pre></td></tr></table></figure>

<p>关闭：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@S1 core]# service iptables stop </span><br><span class="line"># CentOS7</span><br><span class="line">[root@S1 core]# systemctl stop  iptables.service</span><br></pre></td></tr></table></figure>

<p>（3）查看iptables规则</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@S1 core]#  iptables -L -n</span><br></pre></td></tr></table></figure>
<p>（4）开放1333端口（tcp）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">iptables -A INPUT -p tcp --dport 1333 -j ACCEPT</span><br></pre></td></tr></table></figure>
<p>（5）例子</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">iptables -I INPUT 6 -m state --state NEW -p tcp --dport 80 -j ACCEPT</span><br></pre></td></tr></table></figure>
<p>添加此规则至第6行规则（规则先后顺序有优先性）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">问题：</span><br><span class="line">提前在子网做好了 security lists ，增加了一个 List 用于 tcp 5201 。</span><br><span class="line">创建的 instance 使用的是 oracle linux 7</span><br><span class="line">新机登陆后，禁用了 firewalld ，安装并启用 iptables-services 。</span><br><span class="line">添加一条规则允许入站 TCP 5201 端口</span><br><span class="line">service iptables save</span><br><span class="line">service iptables restart</span><br><span class="line">然而，测试发现 5201 端口依然不通。</span><br><span class="line"></span><br><span class="line">哪位兄弟对 oracle cloud 比较熟悉，麻烦指点一下，谢谢。</span><br><span class="line"></span><br><span class="line">解答：</span><br><span class="line">1、要在 Subnet 的 Security List 中先放行</span><br><span class="line">2、检查下规则顺序，需要插入在前面，所以插到第6行，在reject-with icmp-host-prohibited前面</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p><strong>补充：<br>CentOS7出现</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Unit iptables.service could not be found</span><br></pre></td></tr></table></figure>
<p>CentOS7默认的防火墙不是iptables，而是firewalle.</p>
<p>出现此情况可能是iptables防火墙未安装。</p>
<p>#停止firewalld服务</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl stop firewalld</span><br></pre></td></tr></table></figure>

<p>#禁用firewalld服务</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl mask firewalld</span><br></pre></td></tr></table></figure>

<p>#-开启-非步骤，仅备注</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl unmask firewalld</span><br></pre></td></tr></table></figure>

<p>安装iptables-services：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install iptables-services</span><br></pre></td></tr></table></figure>

<p>设置开机启动：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl enable iptables</span><br><span class="line"></span><br><span class="line">systemctl [stop|start|restart] iptables</span><br><span class="line">#or</span><br><span class="line">service iptables [stop|start|restart]</span><br><span class="line"></span><br><span class="line">service iptables save</span><br><span class="line">#or</span><br><span class="line">/usr/libexec/iptables/iptables.init save</span><br></pre></td></tr></table></figure>

<p>然后</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">service iptables status</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Computer</category>
        <category>Building Website</category>
        <category>Server</category>
      </categories>
      <tags>
        <tag>计算机技能</tag>
        <tag>云服务器</tag>
        <tag>BREAK</tag>
      </tags>
  </entry>
  <entry>
    <title>mac系统，如何截取固定尺寸的图片？</title>
    <url>/2021/12/13/mac%E7%B3%BB%E7%BB%9F%EF%BC%8C%E5%A6%82%E4%BD%95%E6%88%AA%E5%8F%96%E5%9B%BA%E5%AE%9A%E5%B0%BA%E5%AF%B8%E7%9A%84%E5%9B%BE%E7%89%87%EF%BC%9F/</url>
    <content><![CDATA[<p>Mac自带截图即可实现</p>
<span id="more"></span>

<p>在 macOS Mojave 上，按下 Shift-Command-5 后，调整你要截图的尺寸大小，然后点击选项，记住上一次选择，然后下次截图就会按照同样的尺寸去执行。<br><img src="https://shawleeoblog-1257713203.cos.ap-nanjing.myqcloud.com/8-1.png" alt="image"><br>但是请注意此记忆只在Shift-Command-5下记忆，在Shift-Command-4下不会记忆</p>
<p>参考：<a href="https://newsn.net/say/mac-capture-fixed-size.html">https://newsn.net/say/mac-capture-fixed-size.html
</a></p>
]]></content>
      <categories>
        <category>Computer</category>
        <category>Software</category>
        <category>Screenshot</category>
      </categories>
      <tags>
        <tag>计算机技能</tag>
        <tag>MacOS</tag>
        <tag>截图</tag>
      </tags>
  </entry>
  <entry>
    <title>ip失效后 Oracle Cloud更换ip 并重新配置agent</title>
    <url>/2022/01/13/ip%E5%A4%B1%E6%95%88%E5%90%8E%20Oracle%20Cloud%E6%9B%B4%E6%8D%A2ip%20%E5%B9%B6%E9%87%8D%E6%96%B0%E9%85%8D%E7%BD%AEagent/</url>
    <content><![CDATA[<h1 id="更换IP"><a href="#更换IP" class="headerlink" title="更换IP"></a>更换IP</h1><p>点击相应的实例详情 – 【附加的 VNIC】- 点击VNIC详情 – 【IP地址】 – 【…】- 点击编辑</p>
<span id="more"></span>

<p><img src="https://shawleeoblog-1257713203.cos.ap-nanjing.myqcloud.com/7-1.png" alt="image"><br><img src="https://shawleeoblog-1257713203.cos.ap-nanjing.myqcloud.com/7-2.png" alt="image"><br><img src="https://shawleeoblog-1257713203.cos.ap-nanjing.myqcloud.com/7-3.png" alt="image"><br>然后点击右边的三个点，选择编辑<br><img src="https://shawleeoblog-1257713203.cos.ap-nanjing.myqcloud.com/7-4.png" alt="image"><br>选择没有公共IP，点击更新！再次点击编辑，选择临时公共IP 或者 预留公共IP 点击更新即可！<br><img src="https://shawleeoblog-1257713203.cos.ap-nanjing.myqcloud.com/7-5.png" alt="image"><br>再次点击编辑，选择临时公共IP 或者 预留公共IP 点击更新即可<br><img src="https://shawleeoblog-1257713203.cos.ap-nanjing.myqcloud.com/7-6.png" alt="image"><br>预留IP怎么选？菜单 — 网络 — 公共IP，直接申请IP</p>
<h1 id="重新配置agent"><a href="#重新配置agent" class="headerlink" title="重新配置agent"></a>重新配置agent</h1><p>此时，如果直接将新IP复制到Agent IP处，会发现是可以连接使用的（起码S家是这样的）。但是最好不要这样。</p>
<p>其次换完IP后一定记得“重新引导”<br>重新引导相当于重启<br><img src="https://shawleeoblog-1257713203.cos.ap-nanjing.myqcloud.com/7-8.png" alt="image"><br>否则root登陆不了</p>
<p>但是如果reboot服务器会发现，不能继续连接使用了。</p>
<p>所以终端连接服务器。<br>然后输入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bash ssr.sh</span><br></pre></td></tr></table></figure>


<p><img src="https://shawleeoblog-1257713203.cos.ap-nanjing.myqcloud.com/7-7.png" alt="image"></p>
<p>选择3卸载后，再</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bash ssr.sh</span><br></pre></td></tr></table></figure>
<p>选择1安装，并配置。</p>
<h1 id="BBR状态检查-甲骨文不要用BBR会被封锁"><a href="#BBR状态检查-甲骨文不要用BBR会被封锁" class="headerlink" title="BBR状态检查-甲骨文不要用BBR会被封锁"></a>BBR状态检查-甲骨文不要用BBR会被封锁</h1><p><a href="https://shawleeo.github.io/2021/11/06/Oracle%20Cloud%20%E6%8A%98%E8%85%BE%E8%AE%B0%E5%BD%95/#%E7%AC%AC%E4%B8%83%E6%AD%A5%EF%BC%9AOracle-Cloud-VPS-CentOS-7-%E5%8D%87%E7%BA%A7%E5%86%85%E6%A0%B8%E5%B9%B6%E5%BC%80%E5%90%AF%E5%AE%98%E6%96%B9%E5%8E%9F%E7%89%88Bottleneck-Bandwidth-and-RTT">参考此步骤的最后一步</a></p>
<p>测速：YouTube 视频统计信息<br>网页端就是点开一个YouTube 视频，然后在视频窗口单击右键，选择“统计资料”。 然后查看Connection Speed 。</p>
<h1 id="IP要测试可用性"><a href="#IP要测试可用性" class="headerlink" title="IP要测试可用性"></a>IP要测试可用性</h1><p>注意此测试要在ssr已经安装完毕后再测<br>否则无论怎么打开端口，测试都是不合格的</p>
<p>一种测试方法</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nc -vz -w 2 xxx.xxx.xxx.xxx(ip) 2333</span><br><span class="line">检测2333端口tcp是否打开</span><br></pre></td></tr></table></figure>


<p>另一种测试方法</p>
<p><a href="https://www.vpsgo.com/ip-check-tools.html">https://www.vpsgo.com/ip-check-tools.html</a></p>
<p>合格IP<br><img src="https://shawleeoblog-1257713203.cos.ap-nanjing.myqcloud.com/7-9.png" alt="image"></p>
<p>不合格IP<br><img src="https://shawleeoblog-1257713203.cos.ap-nanjing.myqcloud.com/7-10.png" alt="image"></p>
]]></content>
      <categories>
        <category>Computer</category>
        <category>Building Website</category>
        <category>Server</category>
      </categories>
      <tags>
        <tag>计算机技能</tag>
        <tag>云服务器</tag>
        <tag>BREAK</tag>
      </tags>
  </entry>
  <entry>
    <title>利用Automator和Python下载数据</title>
    <url>/2021/11/24/%E5%88%A9%E7%94%A8Automator%E5%92%8CPython%E4%B8%8B%E8%BD%BD%E6%95%B0%E6%8D%AE/</url>
    <content><![CDATA[<h1 id="需求："><a href="#需求：" class="headerlink" title="需求："></a>需求：</h1><p>1.从某个网站下载更新的数据，周二至周六更新前一天数据</p>
<p>2.将数据归类到相应路径文件夹</p>
<p>3.将文件按照日期重命名</p>
<span id="more"></span>

<p>参考文档：<a href="https://learnku.com/articles/57325">Python 搭配 Automator 上传文件到 Github</a></p>
<h1 id="Python脚本（脱敏）"><a href="#Python脚本（脱敏）" class="headerlink" title="Python脚本（脱敏）"></a>Python脚本（脱敏）</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># -*- coding:utf8 -*-</span><br><span class="line">#上一行是为了解决python中识别中文注释问题</span><br><span class="line"></span><br><span class="line">import requests</span><br><span class="line">import datetime</span><br><span class="line"></span><br><span class="line">DATA_URL_ARKK_PDF = &#x27;&#x27;</span><br><span class="line">DATA_URL_ARKK_CSV = &#x27;&#x27;</span><br><span class="line"></span><br><span class="line">DATA_MAINPATH = &#x27;/Users/shawleo/Desktop/ARK/Data&#x27;</span><br><span class="line">USER_AGENT = &#x27;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.106 Safari/537.36&#x27;</span><br><span class="line"></span><br><span class="line"># 北京时间每周二至周六晚上9点执行</span><br><span class="line"></span><br><span class="line">theHeader = &#123;&#x27;User-Agent&#x27;: USER_AGENT&#125;</span><br><span class="line">today = datetime.date.today()</span><br><span class="line">formatted_today=today.strftime(&#x27;%y%m%d&#x27;)</span><br><span class="line">yesterday=int(formatted_today)-1</span><br><span class="line"></span><br><span class="line">path_ARKK_PDF = DATA_MAINPATH + &#x27;/ARKK/&#x27; + &#x27;ARKK&#x27; + &#x27;20&#x27; + str(yesterday) + &#x27;.pdf&#x27;</span><br><span class="line">path_ARKK_CSV = DATA_MAINPATH + &#x27;/ARKK/&#x27; + &#x27;ARKK&#x27; + &#x27;20&#x27; + str(yesterday) + &#x27;.csv&#x27;</span><br><span class="line"></span><br><span class="line">response = requests.get(DATA_URL_ARKK_PDF, headers=theHeader, stream=True)</span><br><span class="line"></span><br><span class="line">with open(path_ARKK_PDF, &quot;wb&quot;) as f:</span><br><span class="line">    for chunk in response.iter_content(chunk_size=512):</span><br><span class="line">        f.write(chunk)</span><br><span class="line">        </span><br><span class="line">response = requests.get(DATA_URL_ARKK_CSV, headers=theHeader, stream=True)</span><br><span class="line"></span><br><span class="line">with open(path_ARKK_CSV, &quot;wb&quot;) as f:</span><br><span class="line">    for chunk in response.iter_content(chunk_size=512):</span><br><span class="line">        f.write(chunk)</span><br></pre></td></tr></table></figure>
<h1 id="搭配-Automator-使用"><a href="#搭配-Automator-使用" class="headerlink" title="搭配 Automator 使用"></a>搭配 Automator 使用</h1><p>上面的脚本已经可以使用了，但是每次跑命令行依然很麻烦，苹果电脑提供了一个叫做 Automator (自动操作) 的软件，可以帮助我们建立工作流程，我们可以借助它来帮我们跑脚本。</p>
<h2 id="1-新建一个日历提醒："><a href="#1-新建一个日历提醒：" class="headerlink" title="1.新建一个日历提醒："></a>1.新建一个日历提醒：</h2><p><img src="https://shawleeoblog-1257713203.cos.ap-nanjing.myqcloud.com/6-1.jpeg" alt="image"></p>
<h2 id="2-插入工作日判断"><a href="#2-插入工作日判断" class="headerlink" title="2.插入工作日判断"></a>2.插入工作日判断</h2><p><img src="https://shawleeoblog-1257713203.cos.ap-nanjing.myqcloud.com/6-2.jpeg" alt="image"></p>
<p>搜索applescript，拖进去，输入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">on run</span><br><span class="line">	</span><br><span class="line">#判断日期，周日和周一不运行</span><br><span class="line">	</span><br><span class="line">    set currentDay to weekday of (get current date)</span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line">    if currentDay ≠ Sunday and currentDay ≠ Monday then</span><br><span class="line">		</span><br><span class="line">		</span><br><span class="line">    return true</span><br><span class="line">		</span><br><span class="line">	</span><br><span class="line">    end if</span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line">    error number -128</span><br><span class="line">	#中止执行该workflow，</span><br><span class="line">end run</span><br></pre></td></tr></table></figure>
<p>参考：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">display dialog &quot;Do you want to exit this workflow?&quot; with icon note buttons &#123;&quot;Exit&quot;, &quot;Continue&quot;&#125;</span><br><span class="line">if the button returned of the result is &quot;Exit&quot; then</span><br><span class="line">	error number -128</span><br><span class="line">end if</span><br></pre></td></tr></table></figure>
<p>参考来源：</p>
<p><a href="https://discussions.apple.com/thread/426376">Determine if today is [day of week], then run action?</a></p>
<p><a href="https://cloud.tencent.com/developer/ask/114226">如何告诉Applescript停止执行？</a></p>
<p><a href="https://stackoverflow.com/questions/8621290/how-to-tell-an-applescript-to-stop-executing">How to tell an Applescript to stop executing</a></p>
<h2 id="3-插入提示"><a href="#3-插入提示" class="headerlink" title="3.插入提示"></a>3.插入提示</h2><p>这一步的目的是让 AppleScript 弹出一个提示。</p>
<p>添加一个运行 AppleScript 脚本：<br><img src="https://shawleeoblog-1257713203.cos.ap-nanjing.myqcloud.com/6-3.jpeg" alt="image"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">on run &#123;input, parameters&#125;</span><br><span class="line">    display notification &quot;⬆️ 开始上传&quot;</span><br><span class="line">    return input</span><br><span class="line">end run</span><br></pre></td></tr></table></figure>
<h2 id="4-配置-shell-脚本"><a href="#4-配置-shell-脚本" class="headerlink" title="4.配置 shell 脚本"></a>4.配置 shell 脚本</h2><p>增加一个运行 Shell 脚本 (注意使用bash来执行脚本)：【zsh与bash兼容】<br><img src="https://shawleeoblog-1257713203.cos.ap-nanjing.myqcloud.com/6-4.jpeg" alt="image"></p>
<p>在其中写上：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/usr/local/bin/python3 &lt;&lt;EOF</span><br><span class="line"></span><br><span class="line">把上一步中配置好的 Python 脚本复制到这里</span><br><span class="line"></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>
<p>其中的 /usr/local/bin/python3 &lt;&lt;EOF 和 EOF 写法是一个 Hack，如果直接选择使用 python 执行，会出现找不到 Python 第三方库的情况，所以用了这个 Hack 的办法。</p>
<p><img src="https://shawleeoblog-1257713203.cos.ap-nanjing.myqcloud.com/6-5.jpeg" alt="image"></p>
<h2 id="5-结果图"><a href="#5-结果图" class="headerlink" title="5.结果图"></a>5.结果图</h2><p><img src="https://shawleeoblog-1257713203.cos.ap-nanjing.myqcloud.com/6-6.jpeg" alt="image"></p>
<h2 id="6-保存"><a href="#6-保存" class="headerlink" title="6.保存"></a>6.保存</h2><p>参考：<a href="https://faichou.com/automator/">Mac下自动化神器–扛炮</a></p>
<p>Command+S 保存这个动作, 起一个名字, 之后会弹出日历.</p>
<p>将事件拖放到未来某一天, 双击事件, 在弹出框里点击日期栏会展开, 然后选择 repeat 栏目下的重复周期, 可以设置每周执行一次, 每月执行一次等.</p>
<p>每日执行一次</p>
<p>重复-每天</p>
<p>结束日期时间不要动，都选择9点即可</p>
<p><img src="https://shawleeoblog-1257713203.cos.ap-nanjing.myqcloud.com/6-7.jpeg" alt="image"></p>
<p>上述操作不知道为什么，对于我的电脑无效，只能采取其他方式了：</p>
<p>按住command 多选复制 再粘贴</p>
<p><img src="https://shawleeoblog-1257713203.cos.ap-nanjing.myqcloud.com/6-8.jpeg" alt="image"></p>
<p>附：该application所在路径：</p>
<p><img src="https://shawleeoblog-1257713203.cos.ap-nanjing.myqcloud.com/6-9.jpeg" alt="image"></p>
]]></content>
      <categories>
        <category>Computer</category>
        <category>Software</category>
        <category>Automator</category>
      </categories>
      <tags>
        <tag>计算机技能</tag>
        <tag>Automator</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>甲骨文云通过Cloud Shell以控制台连接的方式连接实例</title>
    <url>/2022/01/13/%E7%94%B2%E9%AA%A8%E6%96%87%E4%BA%91%E9%80%9A%E8%BF%87Cloud%20Shell%E4%BB%A5%E6%8E%A7%E5%88%B6%E5%8F%B0%E8%BF%9E%E6%8E%A5%E7%9A%84%E6%96%B9%E5%BC%8F%E8%BF%9E%E6%8E%A5%E5%AE%9E%E4%BE%8B/</url>
    <content><![CDATA[<p>1、打开Cloud Shell</p>
<span id="more"></span>

<p><img src="https://shawleeoblog-1257713203.cos.ap-nanjing.myqcloud.com/9-1.png" alt="image"></p>
<p>2、在下方出现的Cloud Shell中输入以下命令生成密钥对</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa</span><br></pre></td></tr></table></figure>
<p>3、输出公钥</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat $HOME/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure>

<p>4、在计算-&gt;实例-&gt;实例详细信息-&gt;控制台连接中点击“创建控制台连接”</p>
<p>5、将第3步输出的公钥复制进去并创建</p>
<p>6、当状态变为“活动”时，点击右边的三个小点，并点击“复制 Linux/Mac 的串行控制台连接”<br><img src="https://shawleeoblog-1257713203.cos.ap-nanjing.myqcloud.com/9-2.png" alt="image"></p>
<p>7、粘贴到Cloud Shell中并回车即可连接到实例</p>
<p>8、输入账户和密码 例如root</p>
]]></content>
      <categories>
        <category>Computer</category>
        <category>Building Website</category>
        <category>Server</category>
      </categories>
      <tags>
        <tag>计算机技能</tag>
        <tag>云服务器</tag>
        <tag>BREAK</tag>
      </tags>
  </entry>
  <entry>
    <title>条约法下Signature ad referendum与Signature的区别</title>
    <url>/2021/11/23/%E6%9D%A1%E7%BA%A6%E6%B3%95%E4%B8%8BSignature%20ad%20referendum%E4%B8%8ESignature%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
    <content><![CDATA[<h1 id="Signature-ad-referendum-暂签）"><a href="#Signature-ad-referendum-暂签）" class="headerlink" title="Signature ad referendum(暂签）"></a>Signature ad referendum(暂签）</h1><p>Where the signature is subject to ratification, acceptance or approval, the signature does not establish the consent to be bound. However, it is a means of authentication and expresses the willingness of the signatory state to continue the treaty-making process. The signature qualifies the signatory state to proceed to ratification, acceptance or approval. It representative may sign a treaty “ad referendum”, i.e., under the condition that the signature is confirmed by his state.  In this case, the signature becomes definitive once it is confirmed by the responsible organ.</p>
<span id="more"></span>

<p>[Art.12 (2) (b), Vienna Convention on the Law of Treaties 1969]</p>
<h1 id="Signature-Subject-to-Ratification-Acceptance-or-Approval"><a href="#Signature-Subject-to-Ratification-Acceptance-or-Approval" class="headerlink" title="Signature Subject to Ratification, Acceptance or Approval"></a>Signature Subject to Ratification, Acceptance or Approval</h1><p>Where the signature is subject to ratification, acceptance or approval, the signature does not establish the consent to be bound. However, it is a means of authentication and expresses the willingness of the signatory state to continue the treaty-making process. The signature qualifies the signatory state to proceed to ratification, acceptance or approval. It also creates an obligation to refrain, in good faith, from acts that would defeat the object and the purpose of the treaty.</p>
<p>[Arts.10 and 18, Vienna Convention on the Law of Treaties 1969]</p>
<h1 id="Ratification"><a href="#Ratification" class="headerlink" title="Ratification"></a>Ratification</h1><p>A reservation is a declaration made by a state by which it purports to exclude or alter the legal effect of certain provisions of the treaty in their application to that state. A reservation enables a state to accept a multilateral treaty as a whole by giving it the possibility not to apply certain provisions with which it does not want to comply. Reservations can be made when the treaty is signed, ratified, accepted, approved or acceded to. Reservations must not be incompatible with the object and the purpose of the treaty. Furthermore, a treaty might prohibit reservations or only allow for certain reservations to be made.</p>
<p>[Arts.2 (1) (d) and 19-23, Vienna Convention of the Law of Treaties 1969]</p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>1、Confirmed by the responsible organ后Signature ad referendum变成Signature<br>2、暂签是签约的一个前置程序，但非必需<br>3、解释: 有时候外交官还没有拿到本国相关机构的批准，所以先自己签名，此时没有对于国家的效力，等国家授权以后才相当于国家签署。国家签署了以后，此文件的有关目标和宗旨的条款对国家就有约束力了。然后继续进行，比方说我国的话，等全国人大表决通过此条约以后，此条约中我国接受的明细条款对我国产生效力。</p>
<p>参考:<a href="https://treaties.un.org/pages/Overview.aspx?path=overview/glossary/page1_en.xml">https://treaties.un.org/pages/Overview.aspx?path=overview/glossary/page1_en.xml</a></p>
]]></content>
      <categories>
        <category>Law</category>
        <category>International Law</category>
      </categories>
      <tags>
        <tag>法律笔记</tag>
        <tag>国际法</tag>
        <tag>条约法</tag>
      </tags>
  </entry>
  <entry>
    <title>车位私下转让法律风险</title>
    <url>/2021/10/31/%E8%BD%A6%E4%BD%8D%E7%A7%81%E4%B8%8B%E8%BD%AC%E8%AE%A9%E6%B3%95%E5%BE%8B%E9%A3%8E%E9%99%A9/</url>
    <content><![CDATA[<p>最近有一个朋友向我咨询了一个问题，他想在小区里买一个车位，经过了解发现车位过户需要向物业缴纳3万元过户手续费，所以他与卖方合计，不通知物业，双方私下交易订立合同，这样做是否有法律风险呢？</p>
<span id="more"></span>

<p>我认为认为如果不和物业这边打招呼是有风险的，但是物业3万的过户手续费的收取也是没有任何法律依据的。（政府房产管理部门没有出具产权登记证书，何来过户费用）</p>
<p><strong>首先不和物业打招呼存在的风险有以下几条：</strong></p>
<p>1.目前的车位所有人可以在把车位卖给你后，再将车位卖给其他人。</p>
<p>2.如果目前的车位所有人之前将房产和车位一起抵押，资不抵债后会被法院查封。</p>
<hr>
<p>如果出现上述情况，你如果要维护自己的权益就必须进行案外人执行异议，很麻烦。</p>
<p>所以在物业公司处办理了其公司级别的相应手续相当于对自己购买的车位多了一层保护。</p>
<p>建议和物业商议过户费用问题，3万肯定是离谱了，可以找找人商量解决一下。总之一定要让物业知道你未来购买后拥有这个车位。</p>
<p><strong>注意1:</strong></p>
<p>目前的车位所有人可以在把车位卖给你后，再将车位卖给其他人。——我和他签一个买卖合同可以避免此风险吗？或者去公证处做个公正。——可以在买卖合同上添加违约条款，比如“合同签订后，甲方（车位目前所有者）不得再将此车位（写上车位号码）以任意形式处置，包括但不限于出卖、出租给其他任意第三人，否则乙方有权单方面解除本合同，甲方应返还乙方支付的车位购买款项，同时甲方应支付乙方违约金XXX元，如乙方因此遭受的损失超过该违约金数额的，甲方还应将差额部分支付给乙方”。</p>
<p>对于公证，我认为意义不大，公证后的合同确实可以当成证据，但是所花的时间与精力过大。</p>
<p><strong>注意2:</strong></p>
<p>如果目前的车位所有人之前将房产和车位一起抵押，资不抵债后会被法院查封。——车位没有产权，只有使用权（合同上也是使用权出售协议），可以用于抵押吗？——抵押只是一种情况，只要当前车位所有者被列为被执行人后，法院就会查封他的一切资产，你已经支付了款项，但是没有相关登记（物业公司的），那么车位就有风险。</p>
<p><strong>注意3:</strong></p>
<p>买卖车位后把目前的车位所有人与开发商签订的合同原件收回。</p>
<p><strong>注意4:</strong></p>
<p>建议两条腿走路，一方面在与当前车位所有人的买卖合同中加入违约条款，另一方面和物业公司沟通，3万元的过户费用如果没有物价局的相关规定，那么就不是师出有名。</p>
<p><strong>注意5:</strong></p>
<p>建议再增加一个违约条款“甲方保证，甲方对该车位享有的权利不存在任何瑕疵，乙方购买该车位后不受其他任意第三方权利的追索。否则，甲方应向乙方支付 元违约金，如因此给乙方造成的损失高于违约金数额的，甲方还应将差额部分支付给乙方”，这样可以确保他卖给你的车位在卖给你之前不存在抵押等情况。</p>
]]></content>
      <categories>
        <category>Law</category>
        <category>Chinese law</category>
        <category>Legal practice</category>
      </categories>
      <tags>
        <tag>法律笔记</tag>
      </tags>
  </entry>
</search>
